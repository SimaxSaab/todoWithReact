{"version":3,"sources":["components/List/Item/Item.module.css","components/Add/Add.module.css","components/Header/Header.module.css","components/Search/Search.module.css","components/Status/Status.module.css","components/List/List.module.css","components/Header/Header.jsx","components/Add/Add.jsx","components/Search/Search.jsx","components/Status/Status.jsx","components/List/Item/Item.jsx","components/List/List.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","toDo","done","className","t","header","Add","state","label","onLabelChange","e","setState","target","value","onSubmit","preventDefault","props","onItemAdded","addPanel","this","type","newTodo","onChange","placeholder","Component","SearchPanel","word","onWordChange","onSearchChange","searchInput","filterButtons","name","Status","filter","onFilterChange","buttons","map","classNames","key","onClick","group","Item","important","onToggleImportant","onToggleDone","onDelete","item","itemLabel","TodoList","items","elements","id","itemProps","todoList","App","maxId","search","createItem","toggleProperty","arr","propName","idx","findIndex","slice","length","toLowerCase","indexOf","doneCount","toDoCount","visibleItems","searchItems","filterItems","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4fdf1a26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__23Sck\",\"itemLabel\":\"Item_itemLabel__N130P\",\"done\":\"Item_done__1JBCA\",\"important\":\"Item_important__1J_td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPanel\":\"Add_addPanel__1_N74\",\"newTodo\":\"Add_newTodo__13VbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"Search_searchInput__38AL6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"Status_group__1Nb9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"List_todoList__3Z_f9\",\"list-group-item\":\"List_list-group-item__dUFYt\"};","import React from 'react';\nimport t from './Header.module.css';\n\nconst Header = ({toDo, done}) => {\n  return (\n    <div className={`${t.header} d-flex`}>\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\n\nimport t from './Add.module.css';\n\nexport default class Add extends Component {\n\n  state = {\n    label: ''\n  };\n\n  onLabelChange = (e) => {\n    this.setState({\n      label: e.target.value\n    })\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { label } = this.state;\n    this.setState({ label: '' });\n    const cb = this.props.onItemAdded || (() => {});\n    cb(label);\n  };\n\n  render() {\n    return (\n      <form\n        className={`${t.addPanel} d-flex`}\n        onSubmit={this.onSubmit}>\n\n        <input type=\"text\"\n               className={`form-control ${t.newTodo}`}\n               value={this.state.label}\n               onChange={this.onLabelChange}\n               placeholder=\"Put on the list\" />\n\n        <button type=\"submit\"\n                className=\"btn btn-outline-secondary\">Add</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport t from './Search.module.css';\n\nexport default class SearchPanel extends Component {\n\n  state = {\n    word: ''\n  };\n\n  onWordChange = (e) => {\n    const {onSearchChange = () => {}} = this.props;\n    this.setState({\n      word: e.target.value\n    });\n\n    onSearchChange(e.target.value);\n  };\n\n  render() {\n    return (\n      <input type=\"text\"\n             className={`form-control ${t.searchInput}`}\n             placeholder=\"Search\"\n             value={this.state.word}\n             onChange={ this.onWordChange } />\n    );\n  };\n}\n","import React from 'react';\nimport t from './Status.module.css';\n\nconst filterButtons = [\n  { name: 'all', label: 'All' },\n  { name: 'active', label: 'Active' },\n  { name: 'done', label: 'Done' }\n];\n\nconst Status = ({filter, onFilterChange = () => {}}) => {\n\n  const buttons = filterButtons.map(({name, label}) => {\n    const isActive = name === filter;\n    const classNames = 'btn ' + (isActive ? 'btn-info' : 'btn-outline-secondary');\n\n    return (\n      <button key={name}\n              type=\"button\"\n              onClick={() => onFilterChange(name)}\n              className={classNames}>{label}</button>\n    );\n  });\n\n  return (\n    <div className={`btn-group ${t.group}`}>\n      { buttons }\n    </div>\n  );\n};\n\nexport default Status;\n","import React from 'react';\n\nimport t from './Item.module.css';\n\nconst Item = ({ important, done,\n      label, onToggleImportant, onToggleDone, onDelete }) => {\n\n  let classNames = t.item;\n  if (important) {\n    classNames += ' ' + t.important;\n  }\n\n  if (done) {\n    classNames += ' ' + t.done;\n  }\n\n\n  return (\n    <span className={classNames}>\n      <span\n        className={t.itemLabel}\n        onClick={onToggleDone}>{label}</span>\n\n      <button type=\"button\"\n              className=\"btn btn-outline-success btn-sm float-right\"\n              onClick={onToggleImportant}>\n        <i className=\"fa fa-exclamation\"></i>\n      </button>\n\n      <button type=\"button\"\n              className=\"btn btn-outline-danger btn-sm float-right\"\n              onClick={onDelete}>\n        <i className=\"fa fa-trash-o\"></i>\n      </button>\n    </span>\n  );\n};\n\nexport default Item;\n","import React from 'react';\n\nimport Item from './Item/Item';\n\nimport t from './List.module.css';\n\nconst TodoList = ({ items, onToggleImportant, onToggleDone, onDelete }) => {\n\n  const elements = items.map((item) => {\n    const { id, ...itemProps } = item;\n    return (\n      <li key={id} className=\"list-group-item\">\n        <Item\n          { ...itemProps }\n          onToggleImportant={ () => onToggleImportant(id) }\n          onToggleDone={ () => onToggleDone(id) }\n          onDelete={ () => onDelete(id) } />\n      </li>\n    );\n  });\n\n  return (<ul className={`${t.todoList} list-group`}>{ elements }</ul>);\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport Add from './components/Add/Add';\nimport Search from './components/Search/Search';\nimport Status from './components/Status/Status';\nimport TodoList from './components/List/List';\n\n\n\nimport './App.css';\n\n\nexport default class App extends Component {\n\n  maxId = 100;\n\n  state = {\n    items: [\n      { id: 1, label: 'to take a shower', important: false, done: false },\n      { id: 2, label: 'drink tea', important: false, done: false },\n      { id: 3, label: 'brush teeth', important: true, done: false }\n    ],\n    filter: 'all',\n    search: ''\n  };\n\n  onItemAdded = (label) => {\n    this.setState((state) => {\n      const item = this.createItem(label);\n      return { items: [...state.items, item] };\n    })\n  };\n\n  toggleProperty = (arr, id, propName) => {\n    const idx = arr.findIndex((item) => item.id === id);\n    const oldItem = arr[idx];\n    const value = !oldItem[propName];\n\n    const item = { ...arr[idx], [propName]: value } ;\n    return [\n      ...arr.slice(0, idx),\n      item,\n      ...arr.slice(idx + 1)\n    ];\n  };\n\n  onToggleDone = (id) => {\n    this.setState((state) => {\n      const items = this.toggleProperty(state.items, id, 'done');\n      return { items };\n    });\n  };\n\n  onToggleImportant = (id) => {\n    this.setState((state) => {\n      const items = this.toggleProperty(state.items, id, 'important');\n      return { items };\n    });\n  };\n\n  onDelete = (id) => {\n    this.setState((state) => {\n      const idx = state.items.findIndex((item) => item.id === id);\n      const items = [\n        ...state.items.slice(0, idx),\n        ...state.items.slice(idx + 1)\n      ];\n      return { items };\n    });\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  onSearchChange = (search) => {\n    this.setState({ search });\n  };\n\n  createItem(label) {\n    return {\n      id: ++this.maxId,\n      label,\n      important: false,\n      done: false\n    };\n  }\n\n  filterItems(items, filter) {\n    if (filter === 'all') {\n      return items;\n    } else if (filter === 'active') {\n      return items.filter((item) => (!item.done));\n    } else if (filter === 'done') {\n      return items.filter((item) => item.done);\n    }\n  }\n\n  searchItems(items, search) {\n    if (search.length === 0) {\n      return items;\n    }\n\n    return items.filter((item) => {\n      return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    });\n  }\n\n  render() {\n    const { items, filter, search } = this.state;\n    const doneCount = items.filter((item) => item.done).length;\n    const toDoCount = items.length - doneCount;\n    const visibleItems = this.searchItems(this.filterItems(items, filter), search);\n\n    return (\n      <div className=\"todoApp\">\n        <Header toDo={toDoCount} done={doneCount}/>\n\n        <Add\n          onItemAdded={this.onItemAdded} />\n\n        <div className=\"search d-flex\">\n          <Search\n            onSearchChange={this.onSearchChange}/>\n\n          <Status\n            filter={filter}\n            onFilterChange={this.onFilterChange} />\n        </div>\n\n        <TodoList\n          items={ visibleItems }\n          onToggleImportant={this.onToggleImportant}\n          onToggleDone={this.onToggleDone}\n          onDelete={this.onDelete} />\n\n        \n      </div>\n    );\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}